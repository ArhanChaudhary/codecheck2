Checker
=======

AIOOBE in image calculation didn't get displayed :-(

http://wiley.code-check.org/codecheck/files?repo=bjlo2&problem=06_10

public class EdgeDetect
{
   public static void main(String[] args)
   {
      Picture picture = new Picture("eiffel-tower-picture.jpg");
      int[][] grays = picture.getGrayLevels();

      for (int i = 0; i < grays.length; i++)
      {
         for (int j = 0; j < grays[0].length; j++)
         {
            int neighborAverage = (grays[i][j + 1] + grays[i + 1][j] + grays[i + 1][j + 1]) / 3;
            if (Math.abs(grays[i][j] - neighborAverage) > 20)
            {
               grays[i][j] = 0;               
            }
            else
            {
               grays[i][j] = 255;               
            }
         }         
      }
      Picture edges = new Picture(grays);
      edges.draw();
   }
}


=======

In http://go.code-check.org/codecheck/files?repo=jfe1cc&problem=ch01/c01_exp_1_103, if the student has a \n at the end, the test fails:

Testing Triangle


Actual output

   x
  xxx
 xxxxx
xxxxxxx


Expected output

   x
  xxx
 xxxxx
xxxxxxx

 
fail

 /** 
   A program to draw a filled triangle.
*/

public class Triangle
{
   public static void main(String[] args)
   {
      System.out.println("   x");
      System.out.println("  xxx");
      System.out.println(" xxxxx");
      System.out.println("xxxxxxx\n");

      /* Your work here */

   }
}


 



------------------------------------------------------------------


Remedy 1: Check that the method returned without an exception, and don't give any points otherwise.

Remedy 2: Instead of doing the Expected thing, just compare with the outcome from the expected run

public class TrafficLight
{
    // instance variable
    private int value;

    public void next()
    {
        // code for next method
        TrafficLight light1 = new TrafficLight();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 2");
    }

    public int getReds()
    {
        
        return 0 + 1; // Fix this statement
    }
}

public class TrafficLightTester
{
    public static void main(String[] args)
    {
        TrafficLight light1 = new TrafficLight();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 2");
    }
}

The result is 

1
Expected: 1
...
1
Expected: 1
java.lang.StackOverflowError
	at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77)

Score

3862/3862

----------------------------------------------------------------------

Here's another one that you might be interested in. It seems all of the graphics exercises do this:

java.awt.HeadlessException: 
No X11 DISPLAY variable was set, but this program performed an operation which requires it.
	at java.awt.GraphicsEnvironment.checkHeadless(GraphicsEnvironment.java:207)
	at java.awt.Window.<init>(Window.java:535)
	at java.awt.Frame.<init>(Frame.java:420)
	at java.awt.Frame.<init>(Frame.java:385)
	at javax.swing.JFrame.<init>(JFrame.java:180)
	at com.horstmann.codecheck.SnapFrame.run(SnapFrame.java:60)
	at com.horstmann.codecheck.Main.snap(Main.java:205)
	at com.horstmann.codecheck.Main.run(Main.java:650)
	at com.horstmann.codecheck.Main.main(Main.java:65)

--Steve
------------------------------------------------------------------


Le 01/22/2014 09:32 AM, Stephen Gilbert a écrit :> http://go.code-check.org/codecheck/files?repo=bj4cc&problem=ch19/c19_exp_19_102

Thanks, I figured out the problem. It doesn't make sense to show the binary file encrypted.txt to the student, and it can't be read in as a text file because it's invalid UTF-8. But I changed the mechanism for hiding files, and I'll have to refine that. I'll put it on my todo list.


------------------------------------------------------------------



It depends, unfortunately. They won't get 4/6, but they might get 4 (without a denominator) if code-check can't figure out what the total was because it died prematurely.

It would be a good idea to have it figure out the total, perhaps by grading the solution. I'll add that to the wish list.

Le 23/08/2013 22:40, Kathleen O'Brien a écrit :> If a student gets 4 of 6 expected values and then his code throws an 
> exception doe he get 4/6 points or 0/6?
> 

------------------------------------------------------------------

Shorten timeout, user selectable

Limit stdout size, user selectable

------------------------------------------------------------------

When looking for the main class, it currently looks for the string 

public static void main(String[] args)

It will miss

public static void main (String[] args)

Instead, compile the solution and use reflection.

This might be done once when the problem is first submitted. The other metadata worth saving is the total number of points.

---------------------------------------------------------------

The issue I am currently running into with the system:
> I am providing a check.properties file, with 4 different args settings:
> test1.args-inputFile1.txt
> test2.args-too many arguments
> test3.args-
> test4.args-thisFileNameIsMissingSoItCannotBeFound.txt

That's a reasonable expectation. But to make it true, you need to add 

test1.in-
test2.in-
test3.in-
test4.in-

to check.properties or supply four blank files test1.in ... test4.in. Right now, it doesn't look at testn.args if there isn't a testn.in or testn.out. 

TODO: Support multiple //ARGS lines


----------------------------------------

"About codecheck" disclaimer	 	

Can't generate outputs that depend on directory location 	

Graphics capture not threadsafe	 	

When a Tester dies with a stack overflow, the error message is not added to the report.


Server
======


Are we running as root in aws? How to change?
