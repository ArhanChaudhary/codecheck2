=CodeCheck

jdeprscan --class-path lib/checkstyle-5.7-all.jar:lib/hamcrest-core.jar:lib/jackson-annotations-2.6.4.jar:lib/jackson-core-2.6.4.jar:lib/jackson-databind-2.6.4.jar:lib/junit.jar codecheck.jar
Jar file codecheck.jar:
class com/horstmann/codecheck/CallMethod uses deprecated method java/lang/Thread::stop()V 
class com/horstmann/codecheck/CallMethod uses deprecated method java/lang/Character::<init>(C)V 
class com/horstmann/codecheck/JavaLanguage uses deprecated method java/lang/Thread::stop()V 



Can we compare numbers by significant digits rather than by epsilon?


https://docs.racket-lang.org/rackunit/quick-start.html

mono-mcs  

http://danml.com/download.html

JSONP won't cut it--use only for worksheets
need to make other JSON handler for same origin
type=JSONS make that the default for non-codecheck

Codecheck JdK 9
Put junit, hamcrest on module path

java.security.policy: error adding Entry:
	java.net.MalformedURLException: unknown protocol: jrt

grant codeBase "jrt:/jdk.compiler" {
   permission java.security.AllPermission;
};



Should be possible to detect JAVA_HOME by finding the real path for
`which java` in codecheck script

https://en.wikipedia.org/wiki/Cross-origin_resource_sharing

JUnit 5

score and maxscore in new JSON instead of score/maxscore?

http --form POST localhost:9000/checkJSON repo=bj4fp problem=ch04/c04_exp_4_8 Square.java=@/data/cay/codecheck/bj4fp/ch04/c04_exp_4_8/solution/Square.java | bcat

codecheck -j hw1a

http -j POST cs20.cs.sjsu.edu:8080/checkJson < /data/temp/test.json



We need a bunch of permissions for Jackson and could put that
into /opt/codecheck/lib/jackson and add it to the classpath.

JUnit only needs

  permission java.lang.RuntimePermission "accessDeclaredMembers";

and we grant that to students and testers so they can do stuff with reflection

This reorg would deal with an attack where a student puts arbitrary code into a JUnit test file.



> - Is it possible to embed(in html) css stylesheets in the problem.html? I've tried it but codecheck seems to get rid of them


codecheck download files link; what about //HIDE?

Do s/th about ~/codecheck vs. ~/books/problems/solutions
Fixed ch06/c06_exp_6_110

It would be nice if when the Javadoc is correct, Checkstyle printed something other than pass - perhaps just the "OK"? or "style pass"?

Ron codecheck bug Sun, 21 Jun 2015 23:55:32 System.exit in solution

Codecheck--when one compares program output, and the student has an additional \n at the end, Codecheck fails in a hard-to-understand way.
- Can one accept blank lines at the end when the solution has none?

        // TODO: We only show students source files, not text or images
        // Would be better to show those as well

http://clang-analyzer.llvm.org/

http://libcloud.apache.org/
Codecheck bug with 04_11
CodeCheck SQL, Scheme 
   http://stackoverflow.com/questions/6380327/how-do-you-load-a-file-into-racket-via-command-line
Codecheck
Make it possible to turn off echoing of input in cc?



Blog https://wiley.adobeconnect.com/_a44433639/p9ab13p2db7/?launcher=false&fcsContent=true&pbMode=normal
In the future, I'll see if I can produce some diagnostics instead of the blank screen.
I suppose I could mark them as "student" and "other". 
ivy
grep -l test.run=true ~/codecheck/*/*/*/*/check.properties


Limiting CPU: http://www.howtoforge.com/how-to-limit-cpu-usage-with-cpulimit-on-ubuntu-linux
Firejail: https://firejail.wordpress.com/



AppArmor
========

sudo cat /etc/apparmor.d/data.cay.projects.codecheck.checker.runprog 

# Last Modified: Thu Sep 11 18:23:09 2014
#include <tunables/global>

/data/cay/projects/codecheck/checker/runpython {
  #include <abstractions/base>
  #include <abstractions/bash>

  /bin/bash ix,
  /data/cay/projects/codecheck/checker/runpython r,
}

sudo apparmor_parser -r /etc/apparmor.d/data.cay.projects.codecheck.checker.runprog
sudo aa-enforce /etc/apparmor.d/data.cay.projects.codecheck.checker.runprog

sudo /etc/init.d/apparmor reload
vi /var/log/syslog
sudo aa-logprof


---> Check that it can't read a neighbor



Checker
=======

Bug in /home/cay/projects/codecheck/checker/../samples/python/test5: 
Shouldn't run two tests

AIOOBE in image calculation didn't get displayed :-(

http://wiley.code-check.org/codecheck/files?repo=bjlo2&problem=06_10

public class EdgeDetect
{
   public static void main(String[] args)
   {
      Picture picture = new Picture("eiffel-tower-picture.jpg");
      int[][] grays = picture.getGrayLevels();

      for (int i = 0; i < grays.length; i++)
      {
         for (int j = 0; j < grays[0].length; j++)
         {
            int neighborAverage = (grays[i][j + 1] + grays[i + 1][j] + grays[i + 1][j + 1]) / 3;
            if (Math.abs(grays[i][j] - neighborAverage) > 20)
            {
               grays[i][j] = 0;               
            }
            else
            {
               grays[i][j] = 255;               
            }
         }         
      }
      Picture edges = new Picture(grays);
      edges.draw();
   }
}


=======

In http://go.code-check.org/codecheck/files?repo=jfe1cc&problem=ch01/c01_exp_1_103, if the student has a \n at the end, the test fails:

Testing Triangle


Actual output

   x
  xxx
 xxxxx
xxxxxxx


Expected output

   x
  xxx
 xxxxx
xxxxxxx

 
fail

 /** 
   A program to draw a filled triangle.
*/

public class Triangle
{
   public static void main(String[] args)
   {
      System.out.println("   x");
      System.out.println("  xxx");
      System.out.println(" xxxxx");
      System.out.println("xxxxxxx\n");

      /* Your work here */

   }
}


 



------------------------------------------------------------------


Remedy 1: Check that the method returned without an exception, and don't give any points otherwise.

Remedy 2: Instead of doing the Expected thing, just compare with the outcome from the expected run

public class TrafficLight
{
    // instance variable
    private int value;

    public void next()
    {
        // code for next method
        TrafficLight light1 = new TrafficLight();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 2");
    }

    public int getReds()
    {
        
        return 0 + 1; // Fix this statement
    }
}

public class TrafficLightTester
{
    public static void main(String[] args)
    {
        TrafficLight light1 = new TrafficLight();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 1");
        light1.next();
        System.out.println(light1.getReds());
        System.out.println("Expected: 2");
    }
}

The result is 

1
Expected: 1
...
1
Expected: 1
java.lang.StackOverflowError
	at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77)

Score

3862/3862

----------------------------------------------------------------------

Here's another one that you might be interested in. It seems all of the graphics exercises do this:

java.awt.HeadlessException: 
No X11 DISPLAY variable was set, but this program performed an operation which requires it.
	at java.awt.GraphicsEnvironment.checkHeadless(GraphicsEnvironment.java:207)
	at java.awt.Window.<init>(Window.java:535)
	at java.awt.Frame.<init>(Frame.java:420)
	at java.awt.Frame.<init>(Frame.java:385)
	at javax.swing.JFrame.<init>(JFrame.java:180)
	at com.horstmann.codecheck.SnapFrame.run(SnapFrame.java:60)
	at com.horstmann.codecheck.Main.snap(Main.java:205)
	at com.horstmann.codecheck.Main.run(Main.java:650)
	at com.horstmann.codecheck.Main.main(Main.java:65)

--Steve
------------------------------------------------------------------


Le 01/22/2014 09:32 AM, Stephen Gilbert a écrit :> http://go.code-check.org/codecheck/files?repo=bj4cc&problem=ch19/c19_exp_19_102

Thanks, I figured out the problem. It doesn't make sense to show the binary file encrypted.txt to the student, and it can't be read in as a text file because it's invalid UTF-8. But I changed the mechanism for hiding files, and I'll have to refine that. I'll put it on my todo list.


------------------------------------------------------------------



It depends, unfortunately. They won't get 4/6, but they might get 4 (without a denominator) if code-check can't figure out what the total was because it died prematurely.

It would be a good idea to have it figure out the total, perhaps by grading the solution. I'll add that to the wish list.

Le 23/08/2013 22:40, Kathleen O'Brien a écrit :> If a student gets 4 of 6 expected values and then his code throws an 
> exception doe he get 4/6 points or 0/6?
> 

------------------------------------------------------------------

Shorten timeout, user selectable

Limit stdout size, user selectable

----------------------------------------

"About codecheck" disclaimer	 	

Can't generate outputs that depend on directory location 	

Graphics capture not threadsafe	 	

When a Tester dies with a stack overflow, the error message is not added to the report.

==============================================

Scheme

racket -t filename

Input/output--support it but is it important?

Functions CALL 



(equal? ...)
Name spaces: http://stackoverflow.com/questions/14994153/using-namespaces-to-work-with-shadowed-identifiers   

Testers with RackUnit

Unit testing:
http://docs.racket-lang.org/rackunit/api.html#%28part._.Overview_of_.Rack.Unit%29

Is SUB useful???

;;MAIN


Can have

#lang racket
(provide (all-defined-out))

as first two lines and then use

(require "file.rkt")

or neither of the two and then

(include "file.rkt")


Problem with main

Don't want main for regular work, but then how to recognize main file?
Need main for CALL to feed arg 1 2 3 etc.
Don't want main for test-engine/racket-tests
