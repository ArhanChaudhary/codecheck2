# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
# Request can come from
#
# Old web page /codecheck/files, /codecheck/check with type=plain
# New web page /files, POST /checkJsonp with type=jsonp
# Wiley Engage interactive element
# Sunita
# Hien

# Home page
GET /    controllers.Default.redirect(to = "http://horstmann.com/codecheck/index.html")

# Health check
GET     /health                           controllers.Application.health()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

# New-style UI
GET	    /files						controllers.Files.filesHTML(repo: String ?= "ext", problem: String, level: String ?= "check", callback: String ?= null, type: String ?= null)
GET		/files/:problem				controllers.Files.filesHTML(repo: String ?= "ext", problem: String, level: String ?= "check", callback: String ?= null, type: String ?= null)
GET		/files/:problem/:level		controllers.Files.filesHTML(repo: String ?= "ext", problem: String, level: String, callback: String ?= null, type: String ?= null)
POST    /checkNJS					controllers.Check.checkNJS()
# GET called from interactive element with jsonp result
GET     /checkNJS					controllers.Check.checkNJS()

# For Hien 
GET     /files/data                 controllers.Files.fileData(repo: String ?= "ext", problem: String, level: String ?= "check")
POST    /checkJson					controllers.Check.checkJson()

# Classic HTML with optional callback for Sunita
POST	/check						controllers.Check.checkHTML()

POST	/uploadProblem				controllers.Upload.uploadProblem()

# Old-style UI
GET	    /codecheck/files						controllers.Files.filesHTML(repo: String ?= "ext", problem: String, level: String ?= "check", callback: String ?= null, type: String ?= "plain")
GET		/codecheck/files/:problem				controllers.Files.filesHTML(repo: String ?= "ext", problem: String, level: String ?= "check", callback: String ?= null, type: String ?= "plain")
GET		/codecheck/files/:problem/:level		controllers.Files.filesHTML(repo: String ?= "ext", problem: String, level: String, callback: String ?= null, type: String ?= "plain")
POST	/codecheck/check						controllers.Check.checkHTML()
GET		/fetch/:dir/*name			    controllers.Upload.fetch(dir: String, name: String)

# For compatibility
GET     /codecheck/static/*file                 controllers.Assets.versioned(path="/public", file: Asset)
POST	/codecheck/uploadProblem				controllers.Upload.uploadProblem()
