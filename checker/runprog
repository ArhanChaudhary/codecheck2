#!/bin/bash

# args: language module arg1 arg2 ...

if [ -e `dirname $0`/codecheck.env ] ; then
    set -o allexport
    source `dirname $0`/codecheck.env
    set +o allexport
fi    

LANG=$1
shift

case _"$LANG" in
    _Python)        
        ulimit -d 10000 -f 1000 -n 100 -v 100000
        if [[ $1 =~ .*Test[0-9]*[.]py ]] ; then
            nice python3 -m unittest $@
        else
            nice python3 $@
        fi
        ;;

    _C)
        ulimit -d 10000 -f 1000 -n 100 -v 100000
        PROG=`dirname $1`/prog # Ignore module base name--we called it prog in comprog
        shift 
        nice $PROG $@
        ;;
        
    _Cpp)
        ulimit -d 10000 -f 1000 -n 100 -v 100000
        PROG=`dirname $1`/prog # Ignore module base name--we called it prog in comprog
        shift 
        timeout 60s nice $PROG $@
        ;;

    _Scala)
        ulimit -d 10000 -f 1000 -n 100 -v 10000000
        MODULE=`basename $1`
        CLASSPATH=`dirname $1`
        MODULE=${MODULE/.scala/}
        shift
        PATH=$PATH:$JAVA_HOME/bin nice $SCALA_HOME/bin/scala -classpath "$CLASSPATH" $MODULE $@
        ;;

    _Matlab)
        NO_AT_BRIDGE=1 nice octave --no-gui $@
        ;;

    _Racket)
        ulimit -d 10000 -f 1000 -n 100 -v 1000000
        if grep -qE '\(define\s+\(\s*main\s+' $1 ; then
            nice racket -tm $@
        else
            nice racket -t $@
        fi 
        ;;

    _JavaScript)
        ulimit -d 10000 -f 1000 -n 100 -v 100000
        nice jjs --language=es6 -scripting $@
        ;;

    _CSharp)
        ulimit -d 10000 -f 1000 -n 100 -v 100000
        nice mono `dirname $1`/Prog.exe $@
        ;;
    
    _)  
        echo Unknown language $LANG
        ;;          
esac

