#!/bin/bash

# Copyright 2006-2016 Cay S. Horstmann
#
# This file is part of CodeCheck.
#
# CodeCheck is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CodeCheck is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CodeCheck.  If not, see <http://www.gnu.org/licenses/>.

# To test a solution, run
# codecheck problemdir

# To check a submission, run
# codecheck submissiondir problemdir level

# Options:
# -s server execution (modifies submission dir, only has flags -j -n)
# -t text report
# -j json report
# -n json report for JavaScript client
# -p prints the output instead of launching a browser
# -q quiet (just prints path to result file)
# -d debug (prints CodeCheck command)
# -u Also check student directory (to verify that it will fail)

function copyToSubmission {
    if [ -e $PROBLEMDIR/$1 ] ; then 
        cd $PROBLEMDIR/$1
        for f in `find .` ; do 
            if [ "$f" != "." ] ; then
                mkdir -p $SUBMISSIONDIR/`dirname $f`
                cp $f $SUBMISSIONDIR/$f
                # cp --parents $f $SUBMISSIONDIR
            fi
        done
        cd ../..
    fi  
}

function grade {
    if [ "${SUBMISSIONDIR/#\//}" == "$SUBMISSIONDIR" ] ; then SUBMISSIONDIR="$STARTDIR"/"$SUBMISSIONDIR" ; fi

    if [ "${PROBLEMDIR/#\//}" == "$PROBLEMDIR" ] ; then PROBLEMDIR="$STARTDIR"/"$PROBLEMDIR" ; fi

    if [ "${WORKDIR/#\//}" == "$WORKDIR" ] ; then WORKDIR="$STARTDIR"/"$WORKDIR" ; fi

    cd "$SUBMISSIONDIR"
    REPORT_JAR=`basename $PROBLEMDIR`.signed.zip
    $JAVA_HOME/bin/jar cf $REPORT_JAR . 

    cd "$WORKDIR"

    if [ ! -z "$DEBUG" ] ; then
        echo LC_ALL=en_US.UTF-8 $JAVA_HOME/bin/java $JAVA_OPTS -Dcom.horstmann.codecheck -classpath $CLASSPATH com.horstmann.codecheck.Main $LEVEL "$SUBMISSIONDIR" "$PROBLEMDIR" $@
    fi

    JAVA_OPTS="-Duser.language=en -Duser.country=US $JAVA_OPTS"
    LC_ALL=en_US.UTF-8 $JAVA_HOME/bin/java $JAVA_OPTS -Dcom.horstmann.codecheck -classpath $CLASSPATH com.horstmann.codecheck.Main $LEVEL "$SUBMISSIONDIR" "$PROBLEMDIR" $@

    cd "$SUBMISSIONDIR"

    if [ -e report.html ] ; then
        $JAVA_HOME/bin/jar uf $REPORT_JAR report.html
        MATCH=`grep --text -o '^[<]meta name="ID" content="\(.*\)"/>$' report.html`
        if [[ -n $MATCH ]] ; then
            MATCH=${MATCH##*\=\"}
            ID=${MATCH%\"*}
            mv $REPORT_JAR $ID.signed.zip
            REPORT_JAR=$ID.signed.zip
        fi
    fi

    $JAVA_HOME/bin/jarsigner -keystore "$BASEDIR/codecheck.jks" -storepass secret $REPORT_JAR codecheck > /dev/null
}

# Script start

STARTDIR=`pwd`
BASEDIR=`dirname $0`

# Pick up JAVA_HOME, maybe JAVA_OPTS

if [ -e $BASEDIR/codecheck.env ] ; then
    source $BASEDIR/codecheck.env
fi    

# Set classpath

if [ "${BASEDIR/#\//}" == "$BASEDIR" ] ; then BASEDIR="$STARTDIR"/"$BASEDIR" ; fi
CLASSPATH="$BASEDIR"/codecheck.jar:"$BASEDIR"/lib/\*

# Get server execution out of the way

if [ "$1" == "-s" ] ; then
    shift
    if [ "$1" == "-j" ] ; then 
      JAVA_OPTS="$JAVA_OPTS -Dcom.horstmann.codecheck.jsonreport"
      shift 
    fi
    if [ "$1" == "-n" ] ; then 
      JAVA_OPTS="$JAVA_OPTS -Dcom.horstmann.codecheck.njsreport"
      shift 
    fi

    LEVEL=$1
    shift
    # Program is executed in submission dir
    SUBMISSIONDIR=$1
    WORKDIR=$1
    shift
    PROBLEMDIR=$1
    shift

    grade $@

    exit
fi

# From here on, client execution

# Detect Cygwin
cygwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true;
esac

linux=false
if [[ `uname` == 'Linux' ]]; then
   linux=true
fi

if [ -z "$BROWSER" ] ; then
  if $cygwin; then
    BROWSER=cygstart
  elif $linux; then
    BROWSER=xdg-open
  else
    BROWSER=open
  fi
fi

if [ "$1" == "-p" ] ; then BROWSER=cat ; shift ; fi

if [ "$1" == "-q" ] ; then BROWSER=echo ; shift ; fi

if [ "$1" == "-d" ] ; then DEBUG=true ; shift ; fi

if [ "$1" == "-u" ] ; then CHECK_STUDENT_DIR=true ; shift ; fi

if [ "$1" == "-t" ] ; then 
    BROWSER=cat 
    REPORT=report.txt 
    JAVA_OPTS="$JAVA_OPTS -Dcom.horstmann.codecheck.textreport"
    shift 
elif [ "$1" == "-j" ] ; then 
    BROWSER="python -mjson.tool"
    REPORT=report.json
    JAVA_OPTS="$JAVA_OPTS -Dcom.horstmann.codecheck.jsonreport"
    shift 
elif [ "$1" == "-n" ] ; then 
    BROWSER="python -mjson.tool"
    REPORT=report.json
    JAVA_OPTS="$JAVA_OPTS -Dcom.horstmann.codecheck.njsreport"
    shift 
else
    REPORT=report.html
fi

if [ -z $2 ] ; then
  LEVEL=1
else
  LEVEL=$1
  shift
fi

if [ -z $2 ] ; then
  # Check solution
  PROBLEMDIR=$1
  SUBMISSIONDIR=`mktemp -d /tmp/codecheck.XXXXXXXXXX`

  if [ -e $PROBLEMDIR/solution ] ; then cp -R $PROBLEMDIR/solution/* $SUBMISSIONDIR ; fi
  case $LEVEL in 
    [1-9])
      for n in `seq 1 $LEVEL` ; do
        if [ -e $PROBLEMDIR/solution$n ] ; then cp -R $PROBLEMDIR/solution$n/* $SUBMISSIONDIR ; fi
      done
    ;;
    grade)
      for n in `seq 1 9` ; do
        if [ -e $PROBLEMDIR/solution$n ] ; then cp -R $PROBLEMDIR/solution$n/* $SUBMISSIONDIR ; fi
      done
      if [ -e $PROBLEMDIR/grader ] ; then cp -R $PROBLEMDIR/grader/* $SUBMISSIONDIR ; fi
    ;;
  esac

  # If SUBMISSIONDIR is empty, then copy all files from base dir
  if [ ! "$(ls -A $SUBMISSIONDIR)" ]  ; then
      cp $PROBLEMDIR/* $SUBMISSIONDIR
  fi
  
  shift
else
  SUBMISSIONDIR=$1
  shift
  PROBLEMDIR=$1
  shift
fi

if [ -z "$LEVEL" ] || [ -z "$PROBLEMDIR" ] || [ ! -d "$SUBMISSIONDIR" ] || [ ! -d "$PROBLEMDIR" ]
then
    if [ -z "$LEVEL" ] ; then echo "No level supplied" ; fi
    if [ -z "$PROBLEMDIR" ] ; then echo "No problemdir supplied" ; fi
    if [ ! -d "$SUBMISSIONDIR" ] ; then echo "submissiondir $SUBMISSIONDIR doesn't exist" ; fi
    if [ ! -d "$PROBLEMDIR" ] ; then echo "problemdir $PROBLEMDIR doesn't exist" ; fi
    echo "Usage: `basename $0` [-pqst] level submissiondir problemdir"
    exit 1
fi

if $cygwin; then
    SUBMISSIONDIR=`cygpath -w $SUBMISSIONDIR`
    PROBLEMDIR=`cygpath -w $PROBLEMDIR`
    CLASSPATH=`cygpath -w $CLASSPATH`
fi

WORKDIR=`mktemp -d /tmp/codecheck.XXXXXXXXXX`

grade $@

$BROWSER "$SUBMISSIONDIR/$REPORT" 2> /dev/null 

if [ -z "$CHECK_STUDENT_DIR" ] ; then exit ; fi
echo "Still here"

# Checking student files
cd "$STARTDIR"
SUBMISSIONDIR=`mktemp -d /tmp/codecheck.XXXXXXXXXX`

if [ ! -z $SUBMISSIONDIR ] ; then
    # Checking student files
    copyToSubmission student
  case $LEVEL in 
    [1-9])
        for n in `seq 1 $LEVEL` ; do
            copyToSubmission student$n
        done
        ;;
    grade)
        for n in `seq 1 9` ; do
            copyToSubmission student$n
        done
        copyToSubmission grader
        ;;
  esac

  if $cygwin; then
      SUBMISSIONDIR=`cygpath -w $SUBMISSIONDIR`
  fi
  WORKDIR=`mktemp -d /tmp/codecheck.XXXXXXXXXX`

  grade $@

  $BROWSER "$SUBMISSIONDIR/$REPORT" 2> /dev/null 
fi
