#!/bin/bash

# Copyright 2006-2020 Cay S. Horstmann
#
# This file is part of CodeCheck.
#
# CodeCheck is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CodeCheck is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CodeCheck.  If not, see <http://www.gnu.org/licenses/>.

# To test a solution, run
# codecheck problemdir

# To check a submission, run
# codecheck submissiondir problemdir

# Options:
# -s server execution (modifies submission dir, only has flags -j -n)
# -t text report
# -j json report
# -n json report for JavaScript client
# -p prints the output instead of launching a browser
# -q quiet (just prints path to result file)
# -d debug (prints CodeCheck command)
# -u Also check student directory (to verify that it will fail)

function usage {
    echo "Usage: `basename $0` [-dpqut] problemdir"
    echo "       `basename $0` [-dpqt] submissiondir problemdir"
    echo "       `basename $0` -s [-j] [-n] submissiondir problemdir"
    exit 1
}

function grade {
    if [ "${SUBMISSIONDIR/#\//}" == "$SUBMISSIONDIR" ] ; then SUBMISSIONDIR="$STARTDIR"/"$SUBMISSIONDIR" ; fi

    if [ "${PROBLEMDIR/#\//}" == "$PROBLEMDIR" ] ; then PROBLEMDIR="$STARTDIR"/"$PROBLEMDIR" ; fi

    cd "$SUBMISSIONDIR"
    REPORT_JAR=report.signed.zip
    "$JAVA_HOME"/bin/jar cf $REPORT_JAR . 

    WORKDIR=`mktemp -d /tmp/codecheck.XXXXXXXXXX`
    cd "$WORKDIR"

    JOPTS="-Duser.language=en -Duser.country=US -Dcom.horstmann.codecheck $JAVA_OPTS"

    if [ ! -z "$DEBUG" ] ; then
        JOPTS="$JOPTS -Dcom.horstmann.codecheck.debug" 
        echo WORKDIR=$WORKDIR
        echo LC_ALL=en_US.UTF-8 $EXEC_CONTROL "$JAVA_HOME"/bin/java $JOPTS -classpath $CLASSPATH com.horstmann.codecheck.Main "$SUBMISSIONDIR" "$PROBLEMDIR" $@
    fi

    LC_ALL=en_US.UTF-8 $EXEC_CONTROL "$JAVA_HOME"/bin/java $JOPTS -classpath $CLASSPATH com.horstmann.codecheck.Main "$SUBMISSIONDIR" "$PROBLEMDIR" $@

    if [ -z "$DEBUG" ] ; then
        rm -rf $WORKDIR
    fi

    cd "$SUBMISSIONDIR"

    if [ -e report.html ] ; then
        "$JAVA_HOME"/bin/jar uf $REPORT_JAR report.html
        if [[ $REPORT_TYPE == "HTML" ]] ; then
            MATCH=`grep --text -o '^[<]meta name="ID" content="\(.*\)"/>$' report.html`
            if [[ -n $MATCH ]] ; then
                MATCH=${MATCH##*\=\"}
                ID=${MATCH%\"*}
                mv $REPORT_JAR $ID.signed.zip
                REPORT_JAR=$ID.signed.zip
            fi
        fi
    fi

    if [ ! -z "$STOREPASS" -a -e "$BASEDIR/codecheck.jks" ] ; then
      "$JAVA_HOME"/bin/jarsigner -keystore "$BASEDIR/codecheck.jks" -storepass "$STOREPASS" $REPORT_JAR codecheck > /dev/null
      # Don't use -tsa http://timestamp.comodoca.com
      # It's MUCH too slow
    fi
}

# Script start

STARTDIR=`pwd`
BASEDIR=`dirname $0`

# Pick up env settings and set JAVA_HOME

if [ -e $BASEDIR/codecheck.env ] ; then
    set -o allexport
    source $BASEDIR/codecheck.env
    set +o allexport
fi    

if [ -z "$JAVA_HOME" ] ; then
    JAVA_HOME=$(dirname $(cd $(dirname $(which java)) && pwd -P))
    echo Setting JAVA_HOME=$JAVA_HOME
    exit
fi    

# Set classpath

if [ "${BASEDIR/#\//}" == "$BASEDIR" ] ; then BASEDIR="$STARTDIR"/"$BASEDIR" ; fi
CLASSPATH="$BASEDIR"/codecheck.jar:"$BASEDIR"/lib/\*

# Get server execution out of the way

REPORT_TYPE="HTML"

if [ "$1" == "-s" ] ; then
    shift
    if [ "$1" == "-j" ] ; then
      REPORT_TYPE="JSON"
      shift 
    fi
    if [ "$1" == "-n" ] ; then 
      REPORT_TYPE="NJS"
      shift 
    fi
    JAVA_OPTS="$JAVA_OPTS -Dcom.horstmann.codecheck.report=$REPORT_TYPE"
    EXEC_CONTROL="cgexec -g cpu:codecheck --sticky nice -15"
    SUBMISSIONDIR=$1
    shift
    PROBLEMDIR=$1
    shift

    grade $@

    exit
fi

# From here on, client execution

EXEC_CONTROL=""

if [ -z $1 ] ; then usage; fi

REPORT=report.html

while getopts “cpqdutjn” OPTION
do
     case $OPTION in
         p)
             BROWSER=cat
             ;;
         q)
             BROWSER=echo
             ;;
         d)
             DEBUG=true
             ;;
         u)
             CHECK_STUDENT_DIR=true
             ;;
         t)
             BROWSER=cat
             REPORT_TYPE="Text"
             REPORT=report.txt 
             ;;
         j)
             BROWSER="python -mjson.tool"
             REPORT_TYPE="JSON"
             REPORT=report.json
             ;;
         n)
             BROWSER="python -mjson.tool"
             REPORT_TYPE="NJS"
             REPORT=report.json
             ;;
         c)
             REPORT_TYPE="Codio"
             REPORT=report.html
             ;;
     esac
done
shift $((OPTIND-1))

if [ -z "$BROWSER" ] ; then
    case "`uname`" in
      Linux)
        BROWSER=xdg-open
        ;;
      Darwin)
        BROWSER=open
        ;;
    esac
fi

JAVA_OPTS="$JAVA_OPTS -Dcom.horstmann.codecheck.report=$REPORT_TYPE"

if [[ -z $2 ]] ; then
  # Check solution
  PROBLEMDIR=$1
  shift
  SUBMISSIONDIR=`mktemp -d /tmp/codecheck.XXXXXXXXXX`

  if [ -e $PROBLEMDIR/solution ] ; then
      cp -R $PROBLEMDIR/solution/* $SUBMISSIONDIR
  else
      cp $PROBLEMDIR/* $SUBMISSIONDIR
  fi
  
  shift
else
  # Check student work
  SUBMISSIONDIR=$1
  shift
  PROBLEMDIR=$1
  shift
fi

if [ -z "$PROBLEMDIR" ] || [ ! -d "$SUBMISSIONDIR" ] || [ ! -d "$PROBLEMDIR" ]
then
    if [ -z "$PROBLEMDIR" ] ; then echo "No problemdir supplied" ; fi
    if [ ! -d "$SUBMISSIONDIR" ] ; then echo "submissiondir $SUBMISSIONDIR doesn't exist" ; fi
    if [ ! -d "$PROBLEMDIR" ] ; then echo "problemdir $PROBLEMDIR doesn't exist" ; fi
    usage
fi

grade $@

$BROWSER "$SUBMISSIONDIR/$REPORT" 2> /dev/null 

if [ -z "$CHECK_STUDENT_DIR" ] ; then exit ; fi

# Checking student files
cd "$STARTDIR"
SUBMISSIONDIR=`mktemp -d /tmp/codecheck.XXXXXXXXXX`

if [ -e $PROBLEMDIR/student ] ; then 
    cd $PROBLEMDIR/student
    for f in `find .` ; do 
      if [ "$f" != "." ] ; then
          mkdir -p $SUBMISSIONDIR/`dirname $f`
          cp $f $SUBMISSIONDIR/$f
          # cp --parents $f $SUBMISSIONDIR
      fi
    done
    cd ../..
fi  

grade $@

$BROWSER "$SUBMISSIONDIR/$REPORT" 2> /dev/null 
